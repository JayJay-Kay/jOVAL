<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5"
            xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5"
            xmlns:linux-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux"
            xmlns:sch="http://purl.oclc.org/dsdl/schematron"
            targetNamespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux"
            elementFormDefault="qualified" version="5.11">
     <xsd:import namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5"/>
     <xsd:import namespace="http://oval.mitre.org/XMLSchema/oval-common-5"/>
     <!-- =============================================================================== -->
     <!-- ==============================  ALPINE APK INFO TEST  ========================= -->
     <!-- =============================================================================== -->
     <xsd:element name="apkinfo_test" substitutionGroup="oval-def:test">
          <xsd:annotation>
               <xsd:documentation>The apkinfo test is used to check information for a given Alpine Linux package. It extends the standard TestType as defined in the oval-definitions-schema and one should refer to the TestType description for more information. The required object element references a apkinfo_object and the optional state element specifies the data to check.</xsd:documentation>
               <xsd:appinfo>
                    <oval:element_mapping>
                         <oval:test>apkinfo_test</oval:test>
                         <oval:object>apkginfo_object</oval:object>
                         <oval:state>apkinfo_state</oval:state>
                         <oval:item target_namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux">apkinfo_item</oval:item>
                    </oval:element_mapping>
               </xsd:appinfo>
               <xsd:appinfo>
                    <sch:pattern id="linux-def_apkinfo_test">
                         <sch:rule context="linux-def:apkinfo_test/linux-def:object">
                              <sch:assert test="@object_ref=ancestor::oval-def:oval_definitions/oval-def:objects/linux-def:apkinfo_object/@id"><sch:value-of select="../@id"/> - the object child element of an apkinfo_test must reference an apkinfo_object</sch:assert>
                         </sch:rule>
                         <sch:rule context="linux-def:apkinfo_test/linux-def:state">
                              <sch:assert test="@state_ref=ancestor::oval-def:oval_definitions/oval-def:states/linux-def:apkinfo_state/@id"><sch:value-of select="../@id"/> - the state child element of an apkinfo_test must reference an apkinfo_state</sch:assert>
                         </sch:rule>
                    </sch:pattern>
               </xsd:appinfo>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-def:TestType">
                         <xsd:sequence>
                              <xsd:element name="object" type="oval-def:ObjectRefType" />
                              <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <xsd:element name="apkinfo_object" substitutionGroup="oval-def:object">
          <xsd:annotation>
               <xsd:documentation>The apkinfo_object element is used by a apkinfo test to define the object to be evaluated. Each object extends the standard ObjectType as defined in the oval-definitions-schema and one should refer to the ObjectType description for more information. The common set element allows complex objects to be created using filters and set logic. Again, please refer to the description of the set element in the oval-definitions-schema.</xsd:documentation>
               <xsd:documentation>A apkinfo object consists of a single name entity that identifies the package being checked.</xsd:documentation>
               <xsd:appinfo>
                    <sch:pattern id="linux-def_apkinfo_object_verify_filter_state">
                         <sch:rule context="linux-def:apk_object//oval-def:filter">
                              <sch:let name="parent_object" value="ancestor::linux-def:apkinfo_object"/>
                              <sch:let name="parent_object_id" value="$parent_object/@id"/>
                              <sch:let name="state_ref" value="."/>
                              <sch:let name="reffed_state" value="ancestor::oval-def:oval_definitions/oval-def:states/*[@id=$state_ref]"/>
                              <sch:let name="state_name" value="local-name($reffed_state)"/>
                              <sch:let name="state_namespace" value="namespace-uri($reffed_state)"/>
                              <sch:assert test="(($state_namespace='http://oval.mitre.org/XMLSchema/oval-definitions-5#linux') and ($state_name='apkinfo_state'))">State referenced in filter for <sch:value-of select="name($parent_object)"/> '<sch:value-of select="$parent_object_id"/>' is of the wrong type. </sch:assert>
                         </sch:rule>
                    </sch:pattern>
               </xsd:appinfo>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-def:ObjectType">
                         <xsd:sequence>
                              <xsd:choice>
                                   <xsd:element ref="oval-def:set"/>
                                   <xsd:sequence>
                                        <xsd:element name="name" type="oval-def:EntityObjectStringType">
                                             <xsd:annotation>
                                                  <xsd:documentation>This is the package name to check.</xsd:documentation>
                                             </xsd:annotation>
                                        </xsd:element>
                                        <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                                   </xsd:sequence>
                              </xsd:choice>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
     <xsd:element name="apkinfo_state" substitutionGroup="oval-def:state">
          <xsd:annotation>
               <xsd:documentation>The apkinfo_state element defines the different information that can be used to evaluate the specified Alpine Linux package. This includes the release, and version numbers. Please refer to the individual elements in the schema for more details about what each represents.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
               <xsd:complexContent>
                    <xsd:extension base="oval-def:StateType">
                         <xsd:sequence>
                              <xsd:element name="name" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This is the apk package name to check.</xsd:documentation>
                                   </xsd:annotation>
                              </xsd:element>
                              <xsd:element name="release" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This is the release number of the build, changed by the vendor/builder.</xsd:documentation>
                                   </xsd:annotation>
                                   <xsd:complexType>
                                        <xsd:simpleContent>
                                             <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                                                  <xsd:attribute name="datatype" use="optional" default="string">
                                                       <xsd:simpleType>
                                                            <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                                                 <xsd:enumeration value="string"/>
                                                                 <xsd:enumeration value="version"/>
                                                            </xsd:restriction>
                                                       </xsd:simpleType>
                                                  </xsd:attribute>
                                             </xsd:restriction>
                                        </xsd:simpleContent>
                                   </xsd:complexType>
                              </xsd:element>
                              <xsd:element name="version" minOccurs="0" maxOccurs="1">
                                   <xsd:annotation>
                                        <xsd:documentation>This is the version number of the build.</xsd:documentation>
                                   </xsd:annotation>
                                   <xsd:complexType>
                                        <xsd:simpleContent>
                                             <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                                                  <xsd:attribute name="datatype" use="optional" default="string">
                                                       <xsd:simpleType>
                                                            <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                                                 <xsd:enumeration value="string"/>
                                                                 <xsd:enumeration value="version"/>
                                                            </xsd:restriction>
                                                       </xsd:simpleType>
                                                  </xsd:attribute>
                                             </xsd:restriction>
                                        </xsd:simpleContent>
                                   </xsd:complexType>
                              </xsd:element>
                         </xsd:sequence>
                    </xsd:extension>
               </xsd:complexContent>
          </xsd:complexType>
     </xsd:element>
</xsd:schema>
